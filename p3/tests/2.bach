# ================================
# Main Function for Testing
# ================================
void main [][

# ================================
# Ambiguous If-Else with Arithmetic Precedence
# ================================
if (b == -1){x = 4+3*5-y.}else{x = 0.}

# ================================
# EXPECTED OUTPUT:
# ================================
# if (b == (-1)) {
#     x = ((4 + (3 * 5)) - y).
# } else {
#     x = 0.
# }

# ================================
# Nested If-Else with Operations
# ================================
if (a < 10){if (b >= 5){c = b*a+4-2.}else{c = 0.}}else{c = -1.}

# ================================
# EXPECTED OUTPUT:
# ================================
# if (a < 10) {
#     if (b >= 5) {
#         c = (((b * a) + 4) - 2).
#     } else {
#         c = 0.
#     }
# } else {
#     c = (-1).
# }

# ================================
# While Loop with Nested Expressions
# ================================
while(x < y+2*z){x = x+1.}

# ================================
# EXPECTED OUTPUT:
# ================================
# while (x < (y + (2 * z))) {
#     x = (x + 1).
# }

# ================================
# While Loop with If-Else Inside
# ================================
while(c){if(x > y){z = x - y.}else{z = y - x.}}

# ================================
# EXPECTED OUTPUT:
# ================================
# while (c) {
#     if (x > y) {
#         z = (x - y).
#     } else {
#         z = (y - x).
#     }
# }

# ================================
# Deeply Nested If-Else-While
# ================================
if(flag){if(x<0){y=-x.}else{while(y>0){y=y-1.}}}else{x=x*2.}

# ================================
# EXPECTED OUTPUT:
# ================================
# if (flag) {
#     if (x < 0) {
#         y = (-x).
#     } else {
#         while (y > 0) {
#             y = (y - 1).
#         }
#     }
# } else {
#     x = (x * 2).
# }

# ================================
# Return Statement
# ================================
return.
]